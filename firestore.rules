
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own profile.
    // Any authenticated user can list other users' basic info for messaging.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      // Todos subcollection: Only the user can manage their own todos.
      match /todos/{todoId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
      
      // Integrations subcollection: Only the user can manage their own integrations.
      match /integrations/{integrationId} {
         allow read, write, delete: if request.auth.uid == userId;
      }
    }

    // Analyses: Users can manage their own analysis documents.
    // They can read any analysis they have a direct link to (for sharing).
    match /analyses/{analysisId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth.uid == resource.data.userId;

      // Feedback subcollection: Any authenticated user can add feedback.
      match /feedback/{feedbackId} {
        allow create: if request.auth != null;
        allow read: if request.auth.uid == resource.data.userId; // Only creator can read their feedback
      }
    }
    
    // Messages: Users can only read/write messages in conversations they are part of.
    match /messages/{messageId} {
        allow read, create: if request.auth.uid in resource.data.participants;
    }

    // App-wide data, like the stock ticker.
    // Anyone can read, but no one can write from the client.
    match /app-data/{docId} {
        allow read: if true;
        allow write: if false; // Should only be written by a backend process/function
    }
  }
}
