rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // === User Profiles ===
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null &&
        request.auth.uid == userId &&
        request.auth.token.email_verified == true;
    }

    // === Polls ===
    match /polls/{pollId} {
      allow read: if true;

      // Only moderators/admins can delete polls
      allow delete: if isAdmin() || isModerator();

      // === Comments on Polls ===
      match /comments/{userId} {
        allow read: if true;

        // One comment per user per poll
        allow create: if request.auth != null &&
          request.auth.uid == userId &&
          !exists(/databases/$(database)/documents/polls/$(pollId)/comments/$(request.auth.uid));

        allow update, delete: if request.auth != null &&
          request.auth.uid == userId;
      }

      // === Likes on Polls ===
      match /likes/{userId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == userId;
        // This prevents duplicate likes by using uid as document ID
      }
    }

    // === Tip Logs ===
    match /tips/{tipId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null &&
        request.auth.token.email_verified == true;
      allow update, delete: if false; // only system/webhook
    }

    // === Utility: Role Check ===
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    function isModerator() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "moderator";
    }
  }
}
