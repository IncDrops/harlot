
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read anyone's public profile, but only write to their own.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Polls: Anyone can read, but only authenticated users can create.
    // Only the creator of a poll can update or delete it.
    match /polls/{pollId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.creatorId == request.auth.uid;

      // Comments: Authenticated users can create comments.
      // Users can only update or delete their own comments.
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      }

      // Likes: Authenticated users can like/unlike (create/delete their own like doc).
      match /likes/{userId} {
        allow read: if true;
        allow create, delete: if request.auth != null && request.auth.uid == userId;
      }

      // Votes: Authenticated users can create a vote.
      // A user cannot change their vote once cast.
      match /votes/{voteId} {
        allow read: if request.auth != null; // Or make public if needed
        allow create: if request.auth != null;
        allow update, delete: if false; // Votes are immutable
      }
    }

    // Notifications: Users can only read, write, and delete their own notifications.
    match /users/{userId}/notifications/{notificationId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
  }
}
