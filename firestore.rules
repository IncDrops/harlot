
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the owner of a document
    function isOwner(resource) {
      return request.auth.uid == resource.data.userId;
    }

    // --- Users Collection ---
    // Anyone can create a user profile (on sign up)
    // Only the owner can update their own profile
    // Profiles are publicly readable
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      allow delete: if false; // Generally, don't allow users to delete their own profiles
    }

    // --- Polls Collection ---
    // Anyone can read polls
    // Only authenticated users can create polls
    // Only the poll creator can update or delete their poll
    match /polls/{pollId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && isOwner(get(path));
    }

    // --- Votes Subcollection (example) ---
    // A user can only create a vote for themselves
    match /polls/{pollId}/votes/{userId} {
       allow read: if true;
       allow create: if request.auth.uid == userId;
       allow update, delete: if false; // Don't allow changing votes
    }
  }
}
